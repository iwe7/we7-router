{
  "version": 3,
  "file": "we7-core.umd.min.js",
  "sources": [
    "ng://we7-core/out/tools/we7.service.ts",
    "ng://we7-core/out/startup/startup.service.ts",
    "ng://we7-core/out/net/default.interceptor.ts",
    "ng://we7-core/out/module-import-guard.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class We7Service {\n    queryParams: any = {};\n    constructor() {\n        this.queryParams = this.parseURL();\n    }\n\n    parseURL(): { [k: string]: string } {\n        const ret = {};\n        const seg = location.search.replace(/^\\?/, '').split('&').filter(function (v, i) {\n            if (v !== '' && v.indexOf('=')) {\n                return true;\n            }\n        });\n        seg.forEach((element, index) => {\n            const idx = element.indexOf('=');\n            const key = element.substring(0, idx);\n            const val = element.substring(idx + 1);\n            ret[key] = val;\n        });\n        return ret;\n    }\n\n    setQuerParams(queryParams: any) {\n        this.queryParams = queryParams;\n        return this;\n    }\n\n    get(name: string) {\n        return this.queryParams[name];\n    }\n\n    getUrl(_params: any = {}) {\n        let url = this.serializeQueryParams({ ...this.queryParams, ..._params });\n        return `${url}`;\n    }\n\n    getMobileUrl(_do: string, _params: any = {}) {\n        _params['a'] = 'site';\n        _params['c'] = 'entry';\n        _params['i'] = this.get('i') ? this.get('i') : '2';\n        _params['do'] = _do;\n        return `${location.protocol}//${location.host}/app/index.php${this.getUrl(_params)}`;\n    }\n\n    getWebUrl(_do: string, _params: any = {}) {\n        _params['a'] = 'entry';\n        _params['c'] = 'site';\n        _params['i'] = this.get('i') ? this.get('i') : '2';\n        _params['do'] = _do;\n        return `${location.protocol}//${location.host}/web/index.php${this.getUrl(_params)}`;\n    }\n\n    serializeQueryParams(params: { [key: string]: any }): string {\n        const strParams: string[] = Object.keys(params).map((name) => {\n            const value = params[name];\n            return Array.isArray(value) ?\n                value.map(v => `${this.encodeUriQuery(name)}=${this.encodeUriQuery(v)}`).join('&') :\n                `${this.encodeUriQuery(name)}=${this.encodeUriQuery(value)}`;\n        });\n        return strParams.length ? `?${strParams.join(\"&\")}` : '';\n    }\n\n    encodeUriQuery(s: string): string {\n        return this.encodeUriString(s).replace(/%3B/gi, ';');\n    }\n\n    encodeUriString(s: string): string {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n}",
    "import { Injectable, Injector, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { zip } from 'rxjs/observable/zip';\nimport { catchError } from 'rxjs/operators';\nimport { MenuService, SettingsService, TitleService } from '@delon/theme';\nimport { ACLService } from '@delon/acl';\nimport { ITokenService, DA_SERVICE_TOKEN } from '@delon/auth';\nimport { We7Service } from '../tools/we7.service';\n\n@Injectable()\nexport class StartupService {\n    constructor(\n        private menuService: MenuService,\n        private settingService: SettingsService,\n        private aclService: ACLService,\n        private titleService: TitleService,\n        @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\n        private httpClient: HttpClient,\n        private injector: Injector,\n        private we7: We7Service\n    ) {\n\n    }\n\n    load() {\n        let url = this.we7.getWebUrl('open', { open: 'appconfig' })\n        this.httpClient.get(url).subscribe(res => {\n            console.log(res);\n        });\n    }\n}",
    "import { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse,\n    HttpSentEvent, HttpHeaderResponse, HttpProgressEvent, HttpResponse, HttpUserEvent,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { mergeMap, catchError } from 'rxjs/operators';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { _HttpClient } from '@delon/theme';\n\n/**\n * 默认HTTP拦截器，其注册细节见 `app.module.ts`\n */\n@Injectable()\nexport class DefaultInterceptor implements HttpInterceptor {\n    constructor(private injector: Injector) { }\n    get msg(): NzMessageService {\n        return this.injector.get(NzMessageService);\n    }\n    private goTo(url: string) {\n        setTimeout(() => this.injector.get(Router).navigateByUrl(url));\n    }\n    private handleData(event: HttpResponse<any> | HttpErrorResponse): Observable<any> {\n        // 可能会因为 `throw` 导出无法执行 `_HttpClient` 的 `end()` 操作\n        this.injector.get(_HttpClient).end();\n        // 业务处理：一些通用操作\n        switch (event.status) {\n            case 200:\n                // 业务层级错误处理，以下假如响应体的 `status` 若不为 `0` 表示业务级异常\n                // 并显示 `error_message` 内容\n                // const body: any = event instanceof HttpResponse && event.body;\n                // if (body && body.status !== 0) {\n                //     this.msg.error(body.error_message);\n                //     // 继续抛出错误中断后续所有 Pipe、subscribe 操作，因此：\n                //     // this.http.get('/').subscribe() 并不会触发\n                //     return ErrorObservable.throw(event);\n                // }\n                break;\n            case 401: // 未登录状态码\n                this.goTo('/passport/login');\n                break;\n            case 403:\n            case 404:\n            case 500:\n                this.goTo(`/${event.status}`);\n                break;\n        }\n        return of(event);\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\n        let url = req.url;\n        const newReq = req.clone({\n            url: url\n        });\n        return next.handle(newReq).pipe(\n            mergeMap((event: any) => {\n                if (event instanceof HttpResponse && event.status === 200)\n                    return this.handleData(event);\n                return of(event);\n            }),\n            catchError((err: HttpErrorResponse) => this.handleData(err))\n        );\n    }\n}\n",
    "export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n    if (parentModule) {\n        throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n    }\n}\n"
  ],
  "names": [
    "We7Service",
    "this",
    "queryParams",
    "parseURL",
    "prototype",
    "ret",
    "location",
    "search",
    "replace",
    "split",
    "filter",
    "v",
    "i",
    "indexOf",
    "forEach",
    "element",
    "index",
    "idx",
    "key",
    "substring",
    "val",
    "setQuerParams",
    "get",
    "name",
    "getUrl",
    "_params",
    "serializeQueryParams",
    "Object",
    "assign",
    "getMobileUrl",
    "_do",
    "protocol",
    "host",
    "getWebUrl",
    "params",
    "_this",
    "strParams",
    "keys",
    "map",
    "value",
    "Array",
    "isArray",
    "encodeUriQuery",
    "join",
    "length",
    "s",
    "encodeUriString",
    "encodeURIComponent",
    "type",
    "Injectable",
    "StartupService",
    "menuService",
    "settingService",
    "aclService",
    "titleService",
    "tokenService",
    "httpClient",
    "injector",
    "we7",
    "load",
    "url",
    "open",
    "subscribe",
    "res",
    "console",
    "log",
    "MenuService",
    "SettingsService",
    "ACLService",
    "TitleService",
    "undefined",
    "decorators",
    "Inject",
    "args",
    "DA_SERVICE_TOKEN",
    "HttpClient",
    "Injector",
    "DefaultInterceptor",
    "defineProperty",
    "NzMessageService",
    "goTo",
    "setTimeout",
    "Router",
    "navigateByUrl",
    "handleData",
    "event",
    "_HttpClient",
    "end",
    "status",
    "of",
    "intercept",
    "req",
    "next",
    "newReq",
    "clone",
    "handle",
    "pipe",
    "mergeMap",
    "HttpResponse",
    "catchError",
    "err",
    "parentModule",
    "moduleName",
    "Error"
  ],
  "mappings": "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"
}
