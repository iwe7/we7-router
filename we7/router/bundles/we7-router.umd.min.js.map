{
  "version": 3,
  "file": "we7-router.umd.min.js",
  "sources": [
    "ng://we7-router/node_modules/tslib/tslib.es6.js",
    "ng://we7-router/out/collection.ts",
    "ng://we7-router/out/common.ts",
    "ng://we7-router/out/url-parser.ts",
    "ng://we7-router/out/url_tree.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { NgModuleFactory, ɵisObservable as isObservable, ɵisPromise as isPromise } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { of } from 'rxjs/observable/of';\nimport { concatAll } from 'rxjs/operator/concatAll';\nimport { every } from 'rxjs/operator/every';\nimport * as l from 'rxjs/operator/last';\nimport { map } from 'rxjs/operator/map';\nimport { mergeAll } from 'rxjs/operator/mergeAll';\nimport { PRIMARY_OUTLET } from '@angular/router';\n\nexport function shallowEqualArrays(a: any[], b: any[]): boolean {\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i])) return false;\n    }\n    return true;\n}\n\nexport function shallowEqual(a: { [x: string]: any }, b: { [x: string]: any }): boolean {\n    const k1 = Object.keys(a);\n    const k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    let key: string;\n    for (let i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n\nexport function last<T>(a: T[]): T | null {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n\nexport function and(bools: boolean[]): boolean {\n    return !bools.some(v => !v);\n}\n\nexport function forEach<K, V>(map: { [key: string]: V }, callback: (v: V, k: string) => void): void {\n    for (const prop in map) {\n        if (map.hasOwnProperty(prop)) {\n            callback(map[prop], prop);\n        }\n    }\n}\n\nexport function waitForMap<A, B>(\n    obj: { [k: string]: A }, fn: (k: string, a: A) => Observable<B>): Observable<{ [k: string]: B }> {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n\n    const waitHead: Observable<B>[] = [];\n    const waitTail: Observable<B>[] = [];\n    const res: { [k: string]: B } = {};\n\n    forEach(obj, (a: A, k: string) => {\n        const mapped = map.call(fn(k, a), (r: B) => res[k] = r);\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        } else {\n            waitTail.push(mapped);\n        }\n    });\n\n    const concat$ = concatAll.call(of(...waitHead, ...waitTail));\n    const last$ = l.last.call(concat$);\n    return map.call(last$, () => res);\n}\n\nexport function andObservables(observables: Observable<Observable<any>>): Observable<boolean> {\n    const merged$ = mergeAll.call(observables);\n    return every.call(merged$, (result: any) => result === true);\n}\n\nexport function wrapIntoObservable<T>(value: T | NgModuleFactory<T> | Promise<T> | Observable<T>):\n    Observable<T> {\n    if (isObservable(value)) {\n        return value;\n    }\n\n    if (isPromise(value)) {\n        return fromPromise(Promise.resolve(value));\n    }\n\n    return of(value as T);\n}\n",
    "import { UrlSegmentGroup, UrlSegment, PRIMARY_OUTLET, ParamMap, convertToParamMap, DefaultUrlSerializer, UrlTree } from '@angular/router';\nimport { forEach, shallowEqual } from './collection';\n\n// mobile app/c/a/m/do/v\n// web web/c/a/m/do/v\nexport interface We7Params {\n    root?: string;\n    c?: string;\n    a?: string;\n    do?: string;\n    m?: string;\n    ext?: string;\n    eid?: string;\n    i?: string;\n    version_id?: string;\n    t?: string;\n    j?: string;\n    type?: string;\n}\n\nexport function isApp(segment: UrlSegmentGroup): boolean {\n    const { segments } = segment;\n    if (segments.length > 0) {\n        return segments[0].path === 'app';\n    } else {\n        return false;\n    }\n}\n\nexport function isWeb(segment: UrlSegmentGroup): boolean {\n    const { segments } = segment;\n    if (segments.length > 0) {\n        return segments[0].path === 'web';\n    } else {\n        return false;\n    }\n}\n\n// 如果是app \n\nexport function serializeAppPaths(segments: UrlSegment[]): We7Params {\n    let params: We7Params = {\n        root: 'app/index.php',\n        c: segments.length > 1 ? segments[1].path : 'home'\n    };\n    if (params.c === 'home') {\n        return params;\n    } else {\n        params.a = segments.length > 2 ? segments[2].path : 'site';\n        if (params.c === 'entry') {\n            params.m = segments.length > 3 ? segments[3].path : getQueryParams('m');\n            params.do = segments.length > 4 ? segments[4].path : 'list';\n            params.version_id = segments.length > 5 ? segments[5].path : '1.0.0';\n        } else {\n            params.do = segments.length > 3 ? segments[3].path : 'list';\n            params.version_id = segments.length > 4 ? segments[4].path : '1.0.0';\n        }\n        params.type = 'app';\n        return params;\n    }\n}\n\nexport function serializeWebPaths(segments: UrlSegment[]): We7Params {\n    let params: We7Params = {\n        root: 'web/index.php',\n        c: segments.length > 1 ? segments[1].path : 'site'\n    };\n    params.a = segments.length > 2 ? segments[2].path : 'entry';\n    if (params.c === 'site') {\n        params.m = segments.length > 3 ? segments[3].path : getQueryParams('m');\n        params.do = segments.length > 4 ? segments[4].path : 'index';\n        params.version_id = segments.length > 5 ? segments[5].path : '1.0.0';\n    } else if (params.c === 'platform') {\n\n    } else {\n        params.do = segments.length > 3 ? segments[3].path : 'welcome';\n        params.version_id = segments.length > 4 ? segments[4].path : '1.0.0';\n    }\n    params.type = 'web';\n    return params;\n}\n\nexport function serializePaths(segment: UrlSegmentGroup): We7Params {\n    const { segments } = segment;\n    if (isApp(segment)) {\n        return serializeAppPaths(segments);\n    } else {\n        return serializeWebPaths(segments);\n    }\n}\n\nfunction getQueryParams(name: string) {\n    let url = parseURL();\n    return url[name];\n}\n\nexport function getDefaultQueryParams() {\n    let res = {};\n    let i = getQueryParams('i');\n    if (i) {\n        res['i'] = i;\n    }\n    let j = getQueryParams('j');\n    if (j) {\n        res['j'] = i;\n    }\n    res['poverby'] = 'imeepos';\n    return res;\n}\n\nexport function parseURL(): { [k: string]: string } {\n    const ret = {};\n    const seg = location.search.replace(/^\\?/, '').split('&').filter(function (v, i) {\n        if (v !== '' && v.indexOf('=')) {\n            return true;\n        }\n    });\n    seg.forEach((element, index) => {\n        const idx = element.indexOf('=');\n        const key = element.substring(0, idx);\n        const val = element.substring(idx + 1);\n        ret[key] = val;\n    });\n    return ret;\n}\n\nexport function encodeUriQuery(s: string): string {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n\nexport function encodeUriSegment(s: string): string {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\n\nexport function decode(s: string): string {\n    return decodeURIComponent(s);\n}\n\nexport function decodeQuery(s: string): string {\n    return decode(s.replace(/\\+/g, '%20'));\n}\n\nexport function serializePath(path: UrlSegment): string {\n    return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\n\nfunction encodeUriString(s: string): string {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n\nfunction serializeMatrixParams(params: { [key: string]: string }): string {\n    return Object.keys(params)\n        .map(key => `;${encodeUriSegment(key)}=${encodeUriSegment(params[key])}`)\n        .join('');\n}\n\nexport function equalSegments(as: UrlSegment[], bs: UrlSegment[]): boolean {\n    return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\n\nexport function equalPath(as: UrlSegment[], bs: UrlSegment[]): boolean {\n    if (as.length !== bs.length) return false;\n    return as.every((a, i) => a.path === bs[i].path);\n}\n\nexport function mapChildrenIntoArray<T>(\n    segment: UrlSegmentGroup, fn: (v: UrlSegmentGroup, k: string) => T[]): T[] {\n    let res: T[] = [];\n    forEach(segment.children, (child: UrlSegmentGroup, childOutlet: string) => {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, (child: UrlSegmentGroup, childOutlet: string) => {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n\nexport function equalQueryParams(\n    container: { [k: string]: string }, containee: { [k: string]: string }): boolean {\n    return shallowEqual(container, containee);\n}\n\nexport function equalSegmentGroups(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n    if (!equalPath(container.segments, containee.segments)) return false;\n    if (container.numberOfChildren !== containee.numberOfChildren) return false;\n    for (const c in containee.children) {\n        if (!container.children[c]) return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c])) return false;\n    }\n    return true;\n}\n\nexport function containsQueryParams(\n    container: { [k: string]: string }, containee: { [k: string]: string }): boolean {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => containee[key] === container[key]);\n}\n\nexport function containsSegmentGroup(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n\nexport function containsSegmentGroupHelper(\n    container: UrlSegmentGroup, containee: UrlSegmentGroup, containeePaths: UrlSegment[]): boolean {\n    if (container.segments.length > containeePaths.length) {\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths)) return false;\n        if (containee.hasChildren()) return false;\n        return true;\n\n    } else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths)) return false;\n        for (const c in containee.children) {\n            if (!container.children[c]) return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c])) return false;\n        }\n        return true;\n\n    } else {\n        const current = containeePaths.slice(0, container.segments.length);\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current)) return false;\n        if (!container.children[PRIMARY_OUTLET]) return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n\nconst SEGMENT_RE = /^[^\\/()?;=&#]+/;\nexport function matchSegments(str: string): string {\n    const match = str.match(SEGMENT_RE);\n    console.log('matchSegments', match);\n    return match ? match[0] : '';\n}\n\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\nexport function matchQueryParams(str: string): string {\n    const match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\n\nconst QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\nexport function matchUrlQueryParamValue(str: string): string {\n    const match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\n\n\nexport function serializeSegment(segment: UrlSegmentGroup, root: boolean, fn: Function): string {\n    if (!segment.hasChildren()) {\n        return fn(segment);\n    }\n    if (root) {\n        const primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false, fn) : '';\n        const children: string[] = [];\n        forEach(segment.children, (v: UrlSegmentGroup, k: string) => {\n            if (k !== PRIMARY_OUTLET) {\n                children.push(`${k}:${serializeSegment(v, false, fn)}`);\n            }\n        });\n        return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n    } else {\n        const children = mapChildrenIntoArray(segment, (v: UrlSegmentGroup, k: string) => {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false, fn)];\n            }\n            return [`${k}:${serializeSegment(v, false, fn)}`];\n        });\n        let str = `${fn(segment)}/(${children.join('//')})`;\n        return str;\n    }\n}\n\n\nexport function serializeQueryParams(params: { [key: string]: any }): string {\n    const strParams: string[] = Object.keys(params).map((name) => {\n        const value = params[name];\n        return Array.isArray(value) ?\n            value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') :\n            `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n    });\n    let str = strParams.length ? `?${strParams.join(\"&\")}` : '';\n    return str;\n}\n\n\nexport function containsTree(container: UrlTree, containee: UrlTree, exact: boolean): boolean {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n",
    "\n\nimport { UrlSegmentGroup, UrlSegment, PRIMARY_OUTLET } from '@angular/router';\nimport {\n    matchSegments, decode, matchQueryParams, matchUrlQueryParamValue,\n    decodeQuery\n} from './common';\nimport { getDefaultQueryParams } from './common';\nexport class UrlParser {\n    private remaining: string;\n    params: { [key: string]: any } = {};\n    private copyUrl: string;\n    constructor(private url: string) {\n        this.remaining = url;\n        this.copyUrl = url;\n        // 去掉无用项目\n    }\n\n    getParams() {\n        return this.params;\n    }\n    parseRootSegment(): UrlSegmentGroup {\n        this.consumeOptional('/');\n        return new UrlSegmentGroup([], this.parseChildren());\n    }\n\n    parseQueryParams() {\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam();\n            } while (this.consumeOptional('&'));\n        }\n    }\n\n    parseFragment(): string | null {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n    num: number = 0;\n    private parseChildren(): { [outlet: string]: UrlSegmentGroup } {\n        let segments: UrlSegment[] = [];\n        // 去掉无用项目\n        this.consumeOptional('/');\n        if (this.consumeOptional('app')) {\n            segments.push(new UrlSegment(decode('app'), this.parseMatrixParams()));\n        }\n        this.consumeOptional('/');\n        if (this.consumeOptional('web')) {\n            segments.push(new UrlSegment(decode('web'), this.parseMatrixParams()));\n        }\n        this.consumeOptional('/');\n        this.consumeOptional('index.php');\n        // 解析url params\n        this.parseQueryParams();\n        // 控制器\n        if (this.params['c']) {\n            segments.push(new UrlSegment(decode(this.params['c']), this.parseMatrixParams()));\n        }\n        // 操作器\n        if (this.params['a']) {\n            segments.push(new UrlSegment(decode(this.params['a']), this.parseMatrixParams()));\n        } else {\n            segments.push(new UrlSegment(decode('site'), this.parseMatrixParams()));\n        }\n        if (this.params['m']) {\n            segments.push(new UrlSegment(decode(this.params['m']), this.parseMatrixParams()));\n        }\n        if (this.params['do']) {\n            segments.push(new UrlSegment(decode(this.params['do']), this.parseMatrixParams()));\n        }\n        let children: { [outlet: string]: UrlSegmentGroup } = {};\n        let ext: string = this.params['ext'] || '';\n        let exts = ext.split('|');\n        exts.map(res => {\n            if (res.length > 0) {\n                segments.push(new UrlSegment(decode(res), this.parseMatrixParams()));\n            }\n        });\n        let res: { [outlet: string]: UrlSegmentGroup } = {};\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        console.log(res);\n        return res;\n    }\n\n    private parseWe7Segment(): UrlSegment {\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        if (path === 'web' || path === 'index.php' || path === 'app') {\n            return null;\n        } else {\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        }\n    }\n    private parseSegment(): UrlSegment {\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n\n    private parseMatrixParams(): { [key: string]: any } {\n        const params: { [key: string]: any } = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    }\n\n    private parseParam(params: { [key: string]: any }): void {\n        const key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value: any = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    }\n\n    private parseQueryParam(): void {\n        const key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value: any = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        const decodedKey = decodeQuery(key);\n        const decodedVal = decodeQuery(value);\n        if (this.params.hasOwnProperty(decodedKey)) {\n            let currentVal = this.params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                this.params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        } else {\n            this.params[decodedKey] = decodedVal;\n        }\n    }\n\n    private parseParens(allowPrimary: boolean): { [outlet: string]: UrlSegmentGroup } {\n        const segments: { [key: string]: UrlSegmentGroup } = {};\n        this.capture('(');\n\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            const path = matchSegments(this.remaining);\n            const next = this.remaining[path.length];\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(`Cannot parse url '${this.url}'`);\n            }\n            let outletName: string = undefined!;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            } else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            const children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    }\n\n    private peekStartsWith(str: string): boolean {\n        return this.remaining.startsWith(str);\n    }\n\n    private consumeOptional(str: string): boolean {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    }\n\n    private capture(str: string): void {\n        if (!this.consumeOptional(str)) {\n            throw new Error(`Expected \"${str}\".`);\n        }\n    }\n}\n",
    "import { PRIMARY_OUTLET, ParamMap, convertToParamMap, UrlSegmentGroup, UrlSegment, UrlTree, UrlSerializer } from '@angular/router';\nimport { forEach, shallowEqual } from './collection';\nimport { serializePath, getDefaultQueryParams } from './common';\nimport {\n    serializePaths,\n    mapChildrenIntoArray,\n    equalQueryParams,\n    equalSegmentGroups,\n    containsQueryParams,\n    containsSegmentGroup,\n    matchSegments,\n    matchQueryParams,\n    decode,\n    decodeQuery,\n    matchUrlQueryParamValue,\n    serializeSegment,\n    serializeQueryParams,\n} from './common';\nimport { encodeUriQuery } from './common';\nimport { UrlParser } from './url-parser';\n\nexport class MeepoUrlSerializer implements UrlSerializer {\n    parse(url: string): WebUrlTree {\n        const p = new UrlParser(url);\n        let urlTree = new WebUrlTree(p.parseRootSegment(), p.getParams(), p.parseFragment());\n        return urlTree;\n    }\n    serialize(tree: WebUrlTree): string {\n        const segment: any = serializeSegment(tree.root, true, serializePaths);\n        let params = getDefaultQueryParams();\n        let treeParams = tree.queryParams;\n        params = { ...params, ...treeParams, ...segment };\n        let result = {};\n        for (let key in params) {\n            if (key === 'root') { } else {\n                result[key] = params[key];\n            }\n        }\n        let root = segment.root;\n        const query = serializeQueryParams(result);\n        const fragment = typeof tree.fragment === `string` ? `#${encodeUriQuery(tree.fragment!)}` : '';\n        let str = `${root}${query}${fragment}`;\n        return str;\n    }\n}\n\nconst WEB_SERIALIZER = new MeepoUrlSerializer();\n\nexport class WebUrlTree extends UrlTree {\n    _queryParamMap: ParamMap;\n    constructor(\n        root: UrlSegmentGroup,\n        queryParams: { [key: string]: string },\n        fragment: string | null\n    ) {\n        super();\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    get queryParamMap(): ParamMap {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    toString(): string { return WEB_SERIALIZER.serialize(this); }\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "forEach",
    "map",
    "callback",
    "prop",
    "serializePaths",
    "segment",
    "segments",
    "params",
    "length",
    "path",
    "root",
    "c",
    "a",
    "m",
    "getQueryParams",
    "do",
    "version_id",
    "type",
    "name",
    "ret",
    "location",
    "search",
    "replace",
    "split",
    "filter",
    "v",
    "i",
    "indexOf",
    "element",
    "index",
    "idx",
    "key",
    "substring",
    "val",
    "encodeUriQuery",
    "s",
    "encodeURIComponent",
    "decode",
    "decodeURIComponent",
    "decodeQuery",
    "SEGMENT_RE",
    "matchSegments",
    "str",
    "match",
    "console",
    "log",
    "QUERY_PARAM_RE",
    "QUERY_PARAM_VALUE_RE",
    "serializeSegment",
    "fn",
    "hasChildren",
    "primary",
    "children",
    "PRIMARY_OUTLET",
    "children_1",
    "k",
    "push",
    "join",
    "res",
    "child",
    "childOutlet",
    "concat",
    "UrlParser",
    "url",
    "this",
    "num",
    "remaining",
    "copyUrl",
    "prototype",
    "getParams",
    "parseRootSegment",
    "consumeOptional",
    "UrlSegmentGroup",
    "parseChildren",
    "parseQueryParams",
    "parseQueryParam",
    "parseFragment",
    "_this",
    "UrlSegment",
    "parseMatrixParams",
    "keys",
    "parseWe7Segment",
    "peekStartsWith",
    "Error",
    "capture",
    "parseSegment",
    "parseParam",
    "value",
    "valueMatch",
    "decodedKey",
    "decodedVal",
    "currentVal",
    "isArray",
    "parseParens",
    "allowPrimary",
    "next",
    "outletName",
    "substr",
    "startsWith",
    "MeepoUrlSerializer",
    "parse",
    "WebUrlTree",
    "serialize",
    "tree",
    "treeParams",
    "queryParams",
    "assign",
    "strParams",
    "result",
    "fragment",
    "WEB_SERIALIZER",
    "_super",
    "call",
    "__",
    "constructor",
    "create",
    "tslib_1.__extends",
    "defineProperty",
    "get",
    "_queryParamMap",
    "convertToParamMap",
    "toString",
    "UrlTree"
  ],
  "mappings": "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"
}
