{
  "version": 3,
  "file": "we7-router.js",
  "sources": [
    "ng://we7-router/out/url_tree.ts",
    "ng://we7-router/out/url-parser.ts",
    "ng://we7-router/out/common.ts",
    "ng://we7-router/out/collection.ts"
  ],
  "sourcesContent": [
    "import { PRIMARY_OUTLET, ParamMap, convertToParamMap, UrlSegmentGroup, UrlSegment, UrlTree, UrlSerializer } from '@angular/router';\nimport { forEach, shallowEqual } from './collection';\nimport { serializePath, getDefaultQueryParams } from './common';\nimport {\n    serializePaths,\n    mapChildrenIntoArray,\n    equalQueryParams,\n    equalSegmentGroups,\n    containsQueryParams,\n    containsSegmentGroup,\n    matchSegments,\n    matchQueryParams,\n    decode,\n    decodeQuery,\n    matchUrlQueryParamValue,\n    serializeSegment,\n    serializeQueryParams,\n} from './common';\nimport { encodeUriQuery } from './common';\nimport { UrlParser } from './url-parser';\n\nexport class MeepoUrlSerializer implements UrlSerializer {\n    parse(url: string): WebUrlTree {\n        const p = new UrlParser(url);\n        let urlTree = new WebUrlTree(p.parseRootSegment(), p.getParams(), p.parseFragment());\n        return urlTree;\n    }\n    serialize(tree: WebUrlTree): string {\n        const segment: any = serializeSegment(tree.root, true, serializePaths);\n        let params = getDefaultQueryParams();\n        let treeParams = tree.queryParams;\n        params = { ...params, ...treeParams, ...segment };\n        let result = {};\n        for (let key in params) {\n            if (key === 'root') { } else {\n                result[key] = params[key];\n            }\n        }\n        let root = segment.root;\n        const query = serializeQueryParams(result);\n        const fragment = typeof tree.fragment === `string` ? `#${encodeUriQuery(tree.fragment!)}` : '';\n        let str = `${root}${query}${fragment}`;\n        return str;\n    }\n}\n\nconst WEB_SERIALIZER = new MeepoUrlSerializer();\n\nexport class WebUrlTree extends UrlTree {\n    _queryParamMap: ParamMap;\n    constructor(\n        root: UrlSegmentGroup,\n        queryParams: { [key: string]: string },\n        fragment: string | null\n    ) {\n        super();\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    get queryParamMap(): ParamMap {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    toString(): string { return WEB_SERIALIZER.serialize(this); }\n}\n",
    "\n\nimport { UrlSegmentGroup, UrlSegment, PRIMARY_OUTLET } from '@angular/router';\nimport {\n    matchSegments, decode, matchQueryParams, matchUrlQueryParamValue,\n    decodeQuery\n} from './common';\nimport { getDefaultQueryParams } from './common';\nexport class UrlParser {\n    private remaining: string;\n    params: { [key: string]: any } = {};\n    private copyUrl: string;\n    constructor(private url: string) {\n        this.remaining = url;\n        this.copyUrl = url;\n        // 去掉无用项目\n    }\n\n    getParams() {\n        return this.params;\n    }\n    parseRootSegment(): UrlSegmentGroup {\n        this.consumeOptional('/');\n        return new UrlSegmentGroup([], this.parseChildren());\n    }\n\n    parseQueryParams() {\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam();\n            } while (this.consumeOptional('&'));\n        }\n    }\n\n    parseFragment(): string | null {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n    num: number = 0;\n    private parseChildren(): { [outlet: string]: UrlSegmentGroup } {\n        let segments: UrlSegment[] = [];\n        // 去掉无用项目\n        this.consumeOptional('/');\n        if (this.consumeOptional('app')) {\n            segments.push(new UrlSegment(decode('app'), this.parseMatrixParams()));\n        }\n        this.consumeOptional('/');\n        if (this.consumeOptional('web')) {\n            segments.push(new UrlSegment(decode('web'), this.parseMatrixParams()));\n        }\n        this.consumeOptional('/');\n        this.consumeOptional('index.php');\n        // 解析url params\n        this.parseQueryParams();\n        // 控制器\n        if (this.params['c']) {\n            segments.push(new UrlSegment(decode(this.params['c']), this.parseMatrixParams()));\n        }\n        // 操作器\n        if (this.params['a']) {\n            segments.push(new UrlSegment(decode(this.params['a']), this.parseMatrixParams()));\n        } else {\n            segments.push(new UrlSegment(decode('site'), this.parseMatrixParams()));\n        }\n        if (this.params['m']) {\n            segments.push(new UrlSegment(decode(this.params['m']), this.parseMatrixParams()));\n        }\n        if (this.params['do']) {\n            segments.push(new UrlSegment(decode(this.params['do']), this.parseMatrixParams()));\n        }\n        let children: { [outlet: string]: UrlSegmentGroup } = {};\n        let ext: string = this.params['ext'] || '';\n        let exts = ext.split('|');\n        exts.map(res => {\n            if (res.length > 0) {\n                segments.push(new UrlSegment(decode(res), this.parseMatrixParams()));\n            }\n        });\n        let res: { [outlet: string]: UrlSegmentGroup } = {};\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        console.log(res);\n        return res;\n    }\n\n    private parseWe7Segment(): UrlSegment {\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        if (path === 'web' || path === 'index.php' || path === 'app') {\n            return null;\n        } else {\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        }\n    }\n    private parseSegment(): UrlSegment {\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n\n    private parseMatrixParams(): { [key: string]: any } {\n        const params: { [key: string]: any } = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    }\n\n    private parseParam(params: { [key: string]: any }): void {\n        const key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value: any = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    }\n\n    private parseQueryParam(): void {\n        const key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value: any = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        const decodedKey = decodeQuery(key);\n        const decodedVal = decodeQuery(value);\n        if (this.params.hasOwnProperty(decodedKey)) {\n            let currentVal = this.params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                this.params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        } else {\n            this.params[decodedKey] = decodedVal;\n        }\n    }\n\n    private parseParens(allowPrimary: boolean): { [outlet: string]: UrlSegmentGroup } {\n        const segments: { [key: string]: UrlSegmentGroup } = {};\n        this.capture('(');\n\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            const path = matchSegments(this.remaining);\n            const next = this.remaining[path.length];\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(`Cannot parse url '${this.url}'`);\n            }\n            let outletName: string = undefined!;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            } else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            const children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    }\n\n    private peekStartsWith(str: string): boolean {\n        return this.remaining.startsWith(str);\n    }\n\n    private consumeOptional(str: string): boolean {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    }\n\n    private capture(str: string): void {\n        if (!this.consumeOptional(str)) {\n            throw new Error(`Expected \"${str}\".`);\n        }\n    }\n}\n",
    "import { UrlSegmentGroup, UrlSegment, PRIMARY_OUTLET, ParamMap, convertToParamMap, DefaultUrlSerializer, UrlTree } from '@angular/router';\nimport { forEach, shallowEqual } from './collection';\n\n// mobile app/c/a/m/do/v\n// web web/c/a/m/do/v\nexport interface We7Params {\n    root?: string;\n    c?: string;\n    a?: string;\n    do?: string;\n    m?: string;\n    ext?: string;\n    eid?: string;\n    i?: string;\n    version_id?: string;\n    t?: string;\n    j?: string;\n}\n\nexport function isApp(segment: UrlSegmentGroup): boolean {\n    const { segments } = segment;\n    if (segments.length > 0) {\n        return segments[0].path === 'app';\n    } else {\n        return false;\n    }\n}\n\nexport function isWeb(segment: UrlSegmentGroup): boolean {\n    const { segments } = segment;\n    if (segments.length > 0) {\n        return segments[0].path === 'web';\n    } else {\n        return false;\n    }\n}\n\n// 如果是app \n\nexport function serializeAppPaths(segments: UrlSegment[]): We7Params {\n    let params: We7Params = {\n        root: 'app/index.php',\n        c: segments.length > 1 ? segments[1].path : 'home'\n    };\n    if (params.c === 'home') {\n        return params;\n    } else {\n        params.a = segments.length > 2 ? segments[2].path : 'site';\n        if (params.c === 'entry') {\n            params.m = segments.length > 3 ? segments[3].path : getQueryParams('m');\n            params.do = segments.length > 4 ? segments[4].path : 'list';\n            params.version_id = segments.length > 5 ? segments[5].path : '1.0.0';\n        } else {\n            params.do = segments.length > 3 ? segments[3].path : 'list';\n            params.version_id = segments.length > 4 ? segments[4].path : '1.0.0';\n        }\n        return params;\n    }\n}\n\nexport function serializeWebPaths(segments: UrlSegment[]): We7Params {\n    let params: We7Params = {\n        root: 'web/index.php',\n        c: segments.length > 1 ? segments[1].path : 'site'\n    };\n    params.a = segments.length > 2 ? segments[2].path : 'entry';\n    if (params.c === 'site') {\n        params.m = segments.length > 3 ? segments[3].path : getQueryParams('m');\n        params.do = segments.length > 4 ? segments[4].path : 'index';\n        params.version_id = segments.length > 5 ? segments[5].path : '1.0.0';\n    } else if (params.c === 'platform') {\n\n    } else {\n        params.do = segments.length > 3 ? segments[3].path : 'welcome';\n        params.version_id = segments.length > 4 ? segments[4].path : '1.0.0';\n    }\n    return params;\n}\n\nexport function serializePaths(segment: UrlSegmentGroup): We7Params {\n    const { segments } = segment;\n    if (isApp(segment)) {\n        return serializeAppPaths(segments);\n    } else {\n        return serializeWebPaths(segments);\n    }\n}\n\nfunction getQueryParams(name: string) {\n    let url = parseURL();\n    return url[name];\n}\n\nexport function getDefaultQueryParams() {\n    let res = {};\n    let i = getQueryParams('i');\n    if (i) {\n        res['i'] = i;\n    }\n    let j = getQueryParams('j');\n    if (j) {\n        res['j'] = i;\n    }\n    res['poverby'] = 'imeepos';\n    return res;\n}\n\nexport function parseURL(): { [k: string]: string } {\n    const ret = {};\n    const seg = location.search.replace(/^\\?/, '').split('&').filter(function (v, i) {\n        if (v !== '' && v.indexOf('=')) {\n            return true;\n        }\n    });\n    seg.forEach((element, index) => {\n        const idx = element.indexOf('=');\n        const key = element.substring(0, idx);\n        const val = element.substring(idx + 1);\n        ret[key] = val;\n    });\n    return ret;\n}\n\nexport function encodeUriQuery(s: string): string {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n\nexport function encodeUriSegment(s: string): string {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\n\nexport function decode(s: string): string {\n    return decodeURIComponent(s);\n}\n\nexport function decodeQuery(s: string): string {\n    return decode(s.replace(/\\+/g, '%20'));\n}\n\nexport function serializePath(path: UrlSegment): string {\n    return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\n\nfunction encodeUriString(s: string): string {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n\nfunction serializeMatrixParams(params: { [key: string]: string }): string {\n    return Object.keys(params)\n        .map(key => `;${encodeUriSegment(key)}=${encodeUriSegment(params[key])}`)\n        .join('');\n}\n\nexport function equalSegments(as: UrlSegment[], bs: UrlSegment[]): boolean {\n    return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\n\nexport function equalPath(as: UrlSegment[], bs: UrlSegment[]): boolean {\n    if (as.length !== bs.length) return false;\n    return as.every((a, i) => a.path === bs[i].path);\n}\n\nexport function mapChildrenIntoArray<T>(\n    segment: UrlSegmentGroup, fn: (v: UrlSegmentGroup, k: string) => T[]): T[] {\n    let res: T[] = [];\n    forEach(segment.children, (child: UrlSegmentGroup, childOutlet: string) => {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, (child: UrlSegmentGroup, childOutlet: string) => {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n\nexport function equalQueryParams(\n    container: { [k: string]: string }, containee: { [k: string]: string }): boolean {\n    return shallowEqual(container, containee);\n}\n\nexport function equalSegmentGroups(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n    if (!equalPath(container.segments, containee.segments)) return false;\n    if (container.numberOfChildren !== containee.numberOfChildren) return false;\n    for (const c in containee.children) {\n        if (!container.children[c]) return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c])) return false;\n    }\n    return true;\n}\n\nexport function containsQueryParams(\n    container: { [k: string]: string }, containee: { [k: string]: string }): boolean {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => containee[key] === container[key]);\n}\n\nexport function containsSegmentGroup(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n\nexport function containsSegmentGroupHelper(\n    container: UrlSegmentGroup, containee: UrlSegmentGroup, containeePaths: UrlSegment[]): boolean {\n    if (container.segments.length > containeePaths.length) {\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths)) return false;\n        if (containee.hasChildren()) return false;\n        return true;\n\n    } else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths)) return false;\n        for (const c in containee.children) {\n            if (!container.children[c]) return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c])) return false;\n        }\n        return true;\n\n    } else {\n        const current = containeePaths.slice(0, container.segments.length);\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current)) return false;\n        if (!container.children[PRIMARY_OUTLET]) return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n\nconst SEGMENT_RE = /^[^\\/()?;=&#]+/;\nexport function matchSegments(str: string): string {\n    const match = str.match(SEGMENT_RE);\n    console.log('matchSegments', match);\n    return match ? match[0] : '';\n}\n\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\nexport function matchQueryParams(str: string): string {\n    const match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\n\nconst QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\nexport function matchUrlQueryParamValue(str: string): string {\n    const match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\n\n\nexport function serializeSegment(segment: UrlSegmentGroup, root: boolean, fn: Function): string {\n    if (!segment.hasChildren()) {\n        return fn(segment);\n    }\n    if (root) {\n        const primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false, fn) : '';\n        const children: string[] = [];\n        forEach(segment.children, (v: UrlSegmentGroup, k: string) => {\n            if (k !== PRIMARY_OUTLET) {\n                children.push(`${k}:${serializeSegment(v, false, fn)}`);\n            }\n        });\n        return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n    } else {\n        const children = mapChildrenIntoArray(segment, (v: UrlSegmentGroup, k: string) => {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false, fn)];\n            }\n            return [`${k}:${serializeSegment(v, false, fn)}`];\n        });\n        let str = `${fn(segment)}/(${children.join('//')})`;\n        return str;\n    }\n}\n\n\nexport function serializeQueryParams(params: { [key: string]: any }): string {\n    const strParams: string[] = Object.keys(params).map((name) => {\n        const value = params[name];\n        return Array.isArray(value) ?\n            value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') :\n            `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n    });\n    let str = strParams.length ? `?${strParams.join(\"&\")}` : '';\n    return str;\n}\n\n\nexport function containsTree(container: UrlTree, containee: UrlTree, exact: boolean): boolean {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n",
    "import { NgModuleFactory, ɵisObservable as isObservable, ɵisPromise as isPromise } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { of } from 'rxjs/observable/of';\nimport { concatAll } from 'rxjs/operator/concatAll';\nimport { every } from 'rxjs/operator/every';\nimport * as l from 'rxjs/operator/last';\nimport { map } from 'rxjs/operator/map';\nimport { mergeAll } from 'rxjs/operator/mergeAll';\nimport { PRIMARY_OUTLET } from '@angular/router';\n\nexport function shallowEqualArrays(a: any[], b: any[]): boolean {\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i])) return false;\n    }\n    return true;\n}\n\nexport function shallowEqual(a: { [x: string]: any }, b: { [x: string]: any }): boolean {\n    const k1 = Object.keys(a);\n    const k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    let key: string;\n    for (let i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function flatten<T>(arr: T[][]): T[] {\n    return Array.prototype.concat.apply([], arr);\n}\n\nexport function last<T>(a: T[]): T | null {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n\nexport function and(bools: boolean[]): boolean {\n    return !bools.some(v => !v);\n}\n\nexport function forEach<K, V>(map: { [key: string]: V }, callback: (v: V, k: string) => void): void {\n    for (const prop in map) {\n        if (map.hasOwnProperty(prop)) {\n            callback(map[prop], prop);\n        }\n    }\n}\n\nexport function waitForMap<A, B>(\n    obj: { [k: string]: A }, fn: (k: string, a: A) => Observable<B>): Observable<{ [k: string]: B }> {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n\n    const waitHead: Observable<B>[] = [];\n    const waitTail: Observable<B>[] = [];\n    const res: { [k: string]: B } = {};\n\n    forEach(obj, (a: A, k: string) => {\n        const mapped = map.call(fn(k, a), (r: B) => res[k] = r);\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        } else {\n            waitTail.push(mapped);\n        }\n    });\n\n    const concat$ = concatAll.call(of(...waitHead, ...waitTail));\n    const last$ = l.last.call(concat$);\n    return map.call(last$, () => res);\n}\n\nexport function andObservables(observables: Observable<Observable<any>>): Observable<boolean> {\n    const merged$ = mergeAll.call(observables);\n    return every.call(merged$, (result: any) => result === true);\n}\n\nexport function wrapIntoObservable<T>(value: T | NgModuleFactory<T> | Promise<T> | Observable<T>):\n    Observable<T> {\n    if (isObservable(value)) {\n        return value;\n    }\n\n    if (isPromise(value)) {\n        return fromPromise(Promise.resolve(value));\n    }\n\n    return of(value as T);\n}\n"
  ],
  "names": [
    "tslib_1.__extends"
  ],
  "mappings": "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"
}
